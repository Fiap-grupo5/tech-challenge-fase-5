version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "29092"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: healthcare_identity,healthcare_people,healthcare_scheduling,healthcare_facility
    volumes:
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -c '\\l' | grep healthcare_identity"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  identity-service:
    build: ./identity-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/healthcare_identity
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET:-c7fd2e876d9d46c2a3d8e5c2f6a95b3a8f4b7c1e9a2d5b8e3f6c9d2a5b8e1f4}
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 60s

  people-service:
    build: ./people-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      identity-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/healthcare_people
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      IDENTITY_SERVICE_URL: http://identity-service:8081
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 80s

  facility-service:
    build: ./facility-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      identity-service:
        condition: service_healthy
      people-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/healthcare_facility
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      IDENTITY_SERVICE_URL: http://identity-service:8081
      PEOPLE_SERVICE_URL: http://people-service:8082
    ports:
      - "8084:8084"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 80s

  scheduling-service:
    build: ./scheduling-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      identity-service:
        condition: service_healthy
      people-service:
        condition: service_healthy
      facility-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/healthcare_scheduling
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      IDENTITY_SERVICE_URL: http://identity-service:8081
      PEOPLE_SERVICE_URL: http://people-service:8082
      FACILITY_SERVICE_URL: http://facility-service:8084
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 80s

volumes:
  postgres_data:
